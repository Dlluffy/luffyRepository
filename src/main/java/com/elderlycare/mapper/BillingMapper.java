package com.elderlycare.mapper;

import com.elderlycare.model.Billing;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface BillingMapper {
    @Select({
            "select",
            "bill_id, elder_id, item_name, amount, billing_month, status, paid_at",
            "from billing",
            "where elder_id = #{elderId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column = "bill_id", property = "billId", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "elder_id", property = "elderId", jdbcType = JdbcType.BIGINT),
            @Result(column = "item_name", property = "itemName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "amount", property = "amount", jdbcType = JdbcType.DECIMAL),
    })
    List<Billing> selectByElderId(Long elderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billing
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Delete({
            "delete from billing",
            "where bill_id = #{billId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long billId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billing
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Insert({
            "insert into billing (bill_id, elder_id, ",
            "item_name, amount, ",
            "billing_month, status, ",
            "paid_at)",
            "values (#{billId,jdbcType=BIGINT}, #{elderId,jdbcType=BIGINT}, ",
            "#{itemName,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, ",
            "#{billingMonth,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, ",
            "#{paidAt,jdbcType=TIMESTAMP})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "billId")
    int insert(Billing record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billing
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Select({
            "select",
            "bill_id, elder_id, item_name, amount, billing_month, status, paid_at",
            "from billing",
            "where bill_id = #{billId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column = "bill_id", property = "billId", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "elder_id", property = "elderId", jdbcType = JdbcType.BIGINT),
            @Result(column = "item_name", property = "itemName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "amount", property = "amount", jdbcType = JdbcType.DECIMAL),
            @Result(column = "billing_month", property = "billingMonth", jdbcType = JdbcType.VARCHAR),
            @Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
            @Result(column = "paid_at", property = "paidAt", jdbcType = JdbcType.TIMESTAMP)
    })
    Billing selectByPrimaryKey(Long billId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billing
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Select({
            "select",
            "bill_id, elder_id, item_name, amount, billing_month, status, paid_at",
            "from billing"
    })
    @Results({
            @Result(column = "bill_id", property = "billId", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "elder_id", property = "elderId", jdbcType = JdbcType.BIGINT),
            @Result(column = "item_name", property = "itemName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "amount", property = "amount", jdbcType = JdbcType.DECIMAL),
            @Result(column = "billing_month", property = "billingMonth", jdbcType = JdbcType.VARCHAR),
            @Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
            @Result(column = "paid_at", property = "paidAt", jdbcType = JdbcType.TIMESTAMP)
    })
    List<Billing> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billing
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Update({
            "update billing",
            "set elder_id = #{elderId,jdbcType=BIGINT},",
            "item_name = #{itemName,jdbcType=VARCHAR},",
            "amount = #{amount,jdbcType=DECIMAL},",
            "billing_month = #{billingMonth,jdbcType=VARCHAR},",
            "status = #{status,jdbcType=VARCHAR},",
            "paid_at = #{paidAt,jdbcType=TIMESTAMP}",
            "where bill_id = #{billId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Billing record);

    @Select({
            "select",
            "bill_id, elder_id, item_name, amount, billing_month, status, paid_at",
            "from billing",
            "where elder_id = #{elderId,jdbcType=BIGINT} and status = '欠费'"
    })
    List<Billing> selectUnpaidBillsByElderId(Long elderId);

}
