package com.elderlycare.mapper;

import com.elderlycare.model.Staff;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface StaffMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Delete({
        "delete from staff",
        "where staff_id = #{staffId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long staffId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Insert({
        "insert into staff (staff_id, name, ",
        "role, phone, institution_id, ",
        "password)",
        "values (#{staffId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, ",
        "#{role,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{institutionId,jdbcType=BIGINT}, ",
        "#{password,jdbcType=VARCHAR})"
    })
    int insert(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Select({
        "select",
        "staff_id, name, role, phone, institution_id, password",
        "from staff",
        "where staff_id = #{staffId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="staff_id", property="staffId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="role", property="role", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="institution_id", property="institutionId", jdbcType=JdbcType.BIGINT),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    Staff selectByPrimaryKey(Long staffId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Select({
        "select",
        "staff_id, name, role, phone, institution_id, password",
        "from staff"
    })
    @Results({
        @Result(column="staff_id", property="staffId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="role", property="role", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="institution_id", property="institutionId", jdbcType=JdbcType.BIGINT),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    List<Staff> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Update({
        "update staff",
        "set name = #{name,jdbcType=VARCHAR},",
          "role = #{role,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "institution_id = #{institutionId,jdbcType=BIGINT},",
          "password = #{password,jdbcType=VARCHAR}",
        "where staff_id = #{staffId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Staff record);

    /** 查询所有 role = 'nurse' 的护理员 **/
    @Select("SELECT staff_id, name, role, phone, institution_id, password FROM staff WHERE role = 'nurse'")
    List<Staff> selectAllNurses();
}
