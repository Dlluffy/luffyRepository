package com.elderlycare.mapper;

import com.elderlycare.model.CarePlan;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface CarePlanMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table care_plan
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Delete({
            "delete from care_plan",
            "where plan_id = #{planId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long planId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table care_plan
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Insert({
            "insert into care_plan (plan_id, elder_id, ",
            "level, created_at, ",
            "status, task)",
            "values (#{planId,jdbcType=BIGINT}, #{elderId,jdbcType=BIGINT}, ",
            "#{level,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
            "#{status,jdbcType=VARCHAR}, #{task,jdbcType=LONGVARCHAR})"
    })
    int insert(CarePlan record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table care_plan
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Select({
            "select",
            "plan_id, elder_id, level, created_at, status, task",
            "from care_plan",
            "where plan_id = #{planId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column = "plan_id", property = "planId", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "elder_id", property = "elderId", jdbcType = JdbcType.BIGINT),
            @Result(column = "level", property = "level", jdbcType = JdbcType.VARCHAR),
            @Result(column = "created_at", property = "createdAt", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
            @Result(column = "task", property = "task", jdbcType = JdbcType.LONGVARCHAR)
    })
    CarePlan selectByPrimaryKey(Long planId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table care_plan
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Select({
            "select",
            "plan_id, elder_id, level, created_at, status, task",
            "from care_plan",
            "where archived = 0"
    })
    @Results({
            @Result(column = "plan_id", property = "planId", jdbcType = JdbcType.BIGINT, id = true),
            @Result(column = "elder_id", property = "elderId", jdbcType = JdbcType.BIGINT),
            @Result(column = "level", property = "level", jdbcType = JdbcType.VARCHAR),
            @Result(column = "created_at", property = "createdAt", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
            @Result(column = "task", property = "task", jdbcType = JdbcType.LONGVARCHAR)
    })
    List<CarePlan> selectAll();

    /**
     * 逻辑归档标记
     */
    @Update("update care_plan set archived = #{archived} where plan_id = #{planId}")
    int updateArchived(@Param("planId") Long planId, @Param("archived") Boolean archived);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table care_plan
     *
     * @mbg.generated Wed May 07 09:58:34 HKT 2025
     */
    @Update({
            "update care_plan",
            "set elder_id = #{elderId,jdbcType=BIGINT},",
            "level = #{level,jdbcType=VARCHAR},",
            "created_at = #{createdAt,jdbcType=TIMESTAMP},",
            "status = #{status,jdbcType=VARCHAR},",
            "task = #{task,jdbcType=LONGVARCHAR}",
            "where plan_id = #{planId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CarePlan record);

    @Select("""
            SELECT *
              FROM care_plan
             WHERE elder_id = #{elderId}
             ORDER BY created_at DESC
             LIMIT 1
            """)
    CarePlan getPlanByElderId(Long elderId);
}
